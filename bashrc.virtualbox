HOST_DIR="/home/lakshman/host_c/"
USERS_DIR="${HOST_DIR}/Users/laksh/"
DOWNLOADS_DIR="${USERS_DIR}/Downloads"
DATA_DIR="${HOST_DIR}/Data"
WINTMP_DIR="${USERS_DIR}/AppData/Local/Temp"

dn() {
    cd ${DOWNLOADS_DIR}
}

data() {
    cd ${DATA_DIR}
}

work() {
    cd ${DATA_DIR}/work
}

specs() {
    cd ${DATA_DIR}/specs/
}

wintmp() {
    cd ${WINTMP_DIR}
}

#tmux overrides
gotoNotes() {
    gotoTmuxPane virt 4 0
}
gotoLaunchPad() {
    gotoTmuxPane prom 0 0
}

clip_anchor() {
    while [ 1 ] ; do
        clip_listening=$(ps -ef | egrep '\bclip_listener')
        if [ -z "$clip_listening" ] ; then
            echo "Clip listener being started"
            ~/github/quick-utility-scripts/clip_listener.py
        else
            echo "Clip listener already found running"
        fi
        ssh -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -R 25020:localhost:25020 -R 54321:localhost:22 lakshman@myhetzner
        echo "ssh exited at $(date) .. sleeping 20s.. you should touch /tmp/stop_clip_anchor if you want to quit for good"
        sleep 20 &
        pid=$!
        echo "if you want to quicly retry: kill -9 $pid"
        wait
        if [ -f /tmp/stop_clip_anchor ] ; then
            echo "existing as /tmp/stop_clip_anchor exists"
            break
        fi
    done
}

check_clip() {
    file=/home/lakshman/host_c/Users/laksh/Documents/cliptest.txt
    echo "Contents of $file:"
    cat $file
    echo "*********"
}
alias ccc=check_clip

clear_clip() {
    file=/home/lakshman/host_c/Users/laksh/Documents/cliptest.txt
    echo " " > $file
}
alias ccd=clear_clip

scpfromhetzner() {
    if [ -z "$1" ] ; then
        echo "Supply file to scp from hetzner"
        return 1
    fi
    if [ "$1" == "-r" ] ; then
        shift
        fullfile="$1"
    else
        fullfile=/home/lakshman/tmp/'$1'
    fi
    dn
    cmd="scp lakshman@myhetzner:$fullfile ."
    echo "Running: $cmd"
    eval $cmd
}

scptohetzner() {
    if [ -z "$1" ] ; then
        echo "Supply file to scp from hetzner"
        return 1
    fi
    dn
    cmd="scp '$1' lakshman@myhetzner:/home/lakshman/tmp/"
    echo "Running: $cmd"
    eval $cmd
}

mhb() {
    mosh hetzner
}

sshagwargs () {
        if [ -z "$1" ]
        then
                echo "Supply AGW to login"
                return 1
        fi
        agw="$1"
        shift
        if [ -z "$1" ]
        then
                echo "Supply username to login"
                return 1
        fi
        user="$1"
        ssh -i ~/.ssh/tr0_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "${user}"@"${agw}"
}

sshagw() {
    sshagwargs "$1" onyxedge
}

sshhetzgw() {
    sshagwargs "192.168.122.$1" onyxedge
}

sshjmphz() {
    ssh -J hetzner:38882 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$@"
}
sshagwjmphz() {
    gw="$1" ; shift
    scp -J hetzner:38882 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/tr0_key onyxedge@${gw} "$@"
}

scpjmphz() {
    scp -J hetzner:38882 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$@"
}

scpfromagwjmphz() {
    gw="$1" ; shift
    what="$1"
    scp -J hetzner:38882 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/tr0_key onyxedge@${gw}:${what} ./
}

scptoagwjmphz() {
    gw="$1" ; shift
    what="$1"
    scp -J hetzner:38882 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/tr0_key ${what} onyxedge@${gw}:/tmp/
}

ct() {
    python ~/github/quick-utility-scripts/hetzner_connect.py
}
