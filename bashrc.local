export EMAIL_ADDR=Lakshman_Kumar.Narayanan@alcatel-lucent.com
alias ls='ls --color -F'
alias lsof='/usr/sbin/lsof'
alias grep='egrep --color'
alias tmux='/home/lnara002/software/tmux/mytmux/tmux-1.9a/postinstall/bin/tmux'
alias ag='/home/lnara002/software/ag/the_silver_searcher-0.30.0/postinstall/bin/ag'
alias gitnp='git --no-pager'
alias npgit='git --no-pager'
alias altgit='/home/lnara002/software/git/git/postinstall/bin/git'
alias ttyrec='/home/lnara002/software/ttyrec/ttyrec/ttyrec'
alias ttygif='/home/lnara002/software/ttygif/ttygif'
alias ttygif_concat='/home/lnara002/software/ttygif/concat.sh'

export WINCYG='/Users/lnara002/cygwin'
export WINNOTES='/Users/lnara002/cygwin/notes/git-tracks'
export PIDGIN='/drive_c/Users/lnara002/AppData/Roaming/.purple/logs/sipe/lakshman_kumar.narayanan@alcatel-lucent.com%2clakshman_kumar.narayanan@alcatel-lucent.com'
export WINWS='/drive_c/home/lnara002/linux'
export WINHOME='/drive_c/Users/lnara002'
export WINDWN='/drive_c/Users/lnara002/Downloads'
export WINLK='/drive_c/Lakshman'
export WINTMP='/drive_c/Lakshman/temp'
export WINRS='/drive_c/Users/lnara002/cygwin/repo-of-scripts'
export WINGH='/drive_c/Users/lnara002/cygwin/github'
export GITLOCALCACHE='/home/lnara002/.gitcache/panos.git'
export WSROOT='/home/lnara002/ws'

alias wincyg="cd $WINCYG"
alias winnotes="cd $WINNOTES"
alias pidgin="cd $PIDGIN"
alias winws="cd $WINWS"
alias winhome="cd $WINHOME"
alias windwn="cd $WINDWN"
alias winlk="cd $WINLK"
alias wintmp="cd $WINTMP"
alias winrs="cd $WINRS"
alias wingh="cd $WINGH"
alias lcache="cd $GITLOCALCACHE"
alias cdw="cd $WSROOT"


alias cscope='/home/lnara002/software/cscope/cscope-15.8a/postinstall/bin/cscope'

alias findf='percol --match-method=regex ../tags_f'
alias finds='percol --match-method=regex ../tags_s'
alias findm='percol --match-method=regex ../tags_m'
alias findd='percol --match-method=regex ../tags_d'
alias findgf='percol --match-method=regex ../gtp_tags_f'
alias findgs='percol --match-method=regex ../gtp_tags_s'
alias findgm='percol --match-method=regex ../gtp_tags_m'
alias findgd='percol --match-method=regex ../gtp_tags_d'


export PATH=$PATH:$WINCYG/scripts
export EDITOR=/home/lnara002/software/vim/vim74/postinstall/bin/vim

ovcs()
{
  # over-writes cscope
  mv tmpcsc cscope.out
  mv tmpcsc.in cscope.in.out
  mv tmpcsc.po cscope.po.out
}


newcsc()
{ 
  echo "Rebuilding cscope from cscope.files into tmpcsc"
  if [ ! -f cscope.files ] ; then 
    echo "Huh .. There is no cscope.files"
    return 1
  fi
  if [ -f tmpcsc.out ] ; then
    echo "Huh .. There is already a tmpcsc.out here. Please clean that up first!"
    return 1
  fi
  echo "starting cscope in background"
  cscope -bqki cscope.files -f tmpcsc &
  cscope_pid=$!
  echo -n "Rebuilding ctags .. "
  ctags -L cscope.files --c++-kinds=+p --fields=+iaS --extra=+q
  egrep ';"[[:space:]]f' tags > tags_f
  egrep ';"[[:space:]]m' tags > tags_m
  egrep ';"[[:space:]](s|t)' tags > tags_s
  egrep ';"[[:space:]](d|e)' tags > tags_d
  echo "done"
  echo -n "waiting for cscope($cscope_pid) to complete .. "
  check_for_pid.sh $cscope_pid
  ovcs
  echo "done"
}

analy()
{
  cat /proc/$1/cmdline | tr '\0' '\n'
}

howlong()
{
  ps -o "%p %t" $1 
}

mkf()
{
  ps -ef | grep '\<mk\>' | grep -v egrep | sort -u -k6,6
}

mkp()
{
  if [ -n "$1" ] ; then
    echo $1 > ~/.current_mk_progress_pid
  fi
  pid=$(cat ~/.current_mk_progress_pid)
  kill -s 0 $pid 2> /dev/null
  if [ $? -ne 0 ] ; then
    echo "pid $pid isn't available"
    return 1
  fi
  echo "pid is $pid"
  ls -l /proc/$pid/cwd
  pstree -p $pid
  howlong $pid
  pand=$(\ls -l /proc/$pid/cwd | awk '{print $11}')
  echo "comments:"
  cat $pand/../comments
  echo "log.txt progress:"
  wc $pand/log.txt
  echo "db machine:"
  cat $pand/db2_user_cfg
  echo "prefs file:"
  find $pand -name prefs.mk | parallel --no-notice 'echo {}; cat {}'
}

pc()
{
  if [ -z "$testbed" ] ; then
    echo "testbed is not set"; 
    return
  fi
  if [ -z "$TDISPLAY" ] ; then 
    echo "TDISPLAY is not set";
    return ;
  fi
  echo "Sending to testbed: $testbed, TDISPLAY: $TDISPLAY .. xsel is:"
  xsel -b
  xsel -b | ssh $testbed@$testbed "DISPLAY=$TDISPLAY" xclip 
}

shareclip()
{
   xsel -b > ~/chrome-Downloads/a.txt
   unix2dos ~/chrome-Downloads/a.txt
}

inclip()
{
  dos2unix < ~/chrome-Downloads/clipboard.txt | xsel -i -b
  dos2unix < ~/chrome-Downloads/clipboard.txt | xsel -i -p
  dos2unix < ~/chrome-Downloads/clipboard.txt | xsel -i -s
}


pgprog()
{
  file=$(ps -ef | grep panosgrep | grep tmp | awk '{print $13}' | cut -c2-)
  if [ -z "$file" ] ; then echo "looks like no panosgrep is in progress" ; return ; fi
  less $file 
}

calc()
{ 
  bc <<< "scale=2; $*"
}

dtsdir()
{ 
  if [ -z "$1" ]  ; then
    echo "supply DTS"
    return 1
  fi
  if [ ! -d /home/lnara002/ws/dts/$1 ] ; then
    mkdir /home/lnara002/ws/dts/$1
  fi
  cd /home/lnara002/ws/dts/$1
}

setr()
{
  /drive_c/Users/lnara002/cygwin/repo-of-scripts/new-clone/shiftclone.sh
  if [ $? -eq 0 ] ; then 
    export CURRENT_PANOS=$(cat /home/lnara002/.currp)
    echo "CURRENT_PANOS set to $CURRENT_PANOS"
    cd $CURRENT_PANOS
  fi
}

check_sanity()
{
  if [ -z "$CURRENT_PANOS" ]; then
    echo "CURRENT_PANOS is not set. Do setr first"
    return 1
  fi
  if [[ ! $(pwd) == *"$CURRENT_PANOS"* ]] ; then
    echo "CURRENT_PANOS:$CURRENT_PANOS doesn't seem to be in pwd:$(pwd)"
    return 1
  fi
  return 0
}

cdr()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS
}

cdp()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos
}

cdpbinx()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-i386
}

cdpbinx64()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-x86_64
}

cdpchile()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-chile
}

cdplg()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/lte_gtp
}

cdpg()
{ 
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/gen
}

testbd()
{
  if [ -z "$testbed" -a -z "$1" ] ; then
    echo "no testbed is set"
  fi
  if [ -n "$1" ] ; then
    echo "seting testbed to $1"
    export testbed=$1
  else
    echo "using testbed $testbed"
  fi
  ssh -X $testbed@$testbed
}

vi()
{
  LD_LIBRARY_PATH=/usr/local/lib /home/lnara002/software/vim/vim74/postinstall/bin/vim $*
}

nvim()
{
  /home/lnara002/software/neovim/neovim/postinstall/bin/nvim $*
}

open_conver()
{
  if [ -z "$1" ] ; then
    echo "Supply the html file"
    return 1
  fi
  if [ ! -f "$1" ] ; then
    echo "html file $1 doesn't seem to be present"
    return 1
  fi
  htmltotext.py $1 | vim -R -
}

listtmuxpanes()
{
  if [ -z "$1" ] ; then
    session=main
  else
    session="$1"
  fi
  tmux list-panes -s -t $session -F "#I|#W|#P|#T|#{pane_tty}"
}

listtmuxlog()
{
   ps -ef | grep '\<cat\>' | grep -v grep
   pids=$(ps -ef | grep '\<cat\>' | grep -v grep | awk '{print $2}')
   for i in $pids ; do
     echo "$i"
     lsof -p $i
   done
}

viewpdf()
{
  if [ -z "$1" ] ; then
    echo "Supply pdf file"
    return 1
  fi
  pdftotext -layout $1 - | vim -R -
}

tmuxatt()
{
  if [ -z "$1" ] ; then
    session="main"
  else
    session="$1"
  fi
  tmux -2 attach -d -t $session
}


# From https://gist.github.com/msabramo/746585#file-pyval-sh
_pyval() {
    local python_cmd="print $@"
    python -c "${python_cmd}"

    case "$shopts" in
        *noglob*) ;;
        *) set +f;;
    esac

    unset shopts
}
alias pyval='shopts="$SHELLOPTS"; set -f; _pyval'
