export EMAIL_ADDR=Lakshman_Kumar.Narayanan@alcatel-lucent.com
alias ls='ls --color -F'
alias lsof='/usr/sbin/lsof'
alias grep='egrep --color'

export WINCYG='/Users/lnara002/cygwin'
export PIDGIN='/drive_c/Users/lnara002/AppData/Roaming/.purple/logs/sipe/lakshman_kumar.narayanan@alcatel-lucent.com%2clakshman_kumar.narayanan@alcatel-lucent.com'
export WINWS='/drive_c/home/lnara002/linux'
export WINHOME='/drive_c/Users/lnara002'
export WINDWN='/drive_c/Users/lnara002/Downloads'
export WINLK='/drive_c/Lakshman'
export WINTMP='/drive_c/Lakshman/temp'
export WINRS='/drive_c/Users/lnara002/cygwin/repo-of-scripts'
export WINGH='/drive_c/Users/lnara002/cygwin/github'

alias wincyg="cd $WINCYG"
alias pidgin="cd $PIDGIN"
alias winws="cd $WINWS"
alias winhome="cd $WINHOME"
alias windwn="cd $WINDWN"
alias winlk="cd $WINLK"
alias wintmp="cd $WINTMP"
alias winrs="cd $WINRS"
alias wingh="cd $WINGH"


alias cscope='/home/lnara002/software/cscope/cscope-15.8a/postinstall/bin/cscope'


export PATH=$PATH:$WINCYG/scripts

ovcs()
{
  # over-writes cscope
  mv tmpcsc cscope.out
  mv tmpcsc.in cscope.in.out
  mv tmpcsc.po cscope.po.out
}


newcsc()
{ 
  echo "Rebuilding cscope from cscope.files into tmpcsc"
  if [ ! -f cscope.files ] ; then 
    echo "Huh .. There is no cscope.files"
    return 1
  fi
  if [ -f tmpcsc.out ] ; then
    echo "Huh .. There is already a tmpcsc.out here. Please clean that up first!"
    return 1
  fi
  cscope -bqki cscope.files -f tmpcsc
  ovcs
}

analy()
{
  cat /proc/$1/cmdline | tr '\0' '\n'
}

howlong()
{
  ps -eo "%p %t" | grep $1 
}

mkf()
{
  ps -ef | grep mk
}

mkp()
{
  if [ -n "$1" ] ; then
    echo $1 > ~/.current_mk_progress_pid
  fi
  pid=$(cat ~/.current_mk_progress_pid)
  kill -s 0 $pid 2> /dev/null
  if [ $? -ne 0 ] ; then
    echo "pid $pid isn't available"
    return 1
  fi
  echo "pid is $pid"
  pstree -p $pid
  howlong $pid
}

pc()
{
  if [ -z "$testbed" ] ; then
    echo "testbed is not set"; 
    return
  fi
  if [ -z "$TDISPLAY" ] ; then 
    echo "TDISPLAY is not set";
    return ;
  fi
  echo "Sending to testbed: $testbed, TDISPLAY: $TDISPLAY .. xsel is:"
  xsel -b
  xsel -b | ssh $testbed@$testbed "DISPLAY=$TDISPLAY" xclip 
}

pgprog()
{
  file=$(ps -ef | grep panosgrep | grep tmp | awk '{print $13}' | cut -c2-)
  if [ -z "$file" ] ; then echo "looks like no panosgrep is in progress" ; return ; fi
  less $file 
}

calc()
{ 
  bc <<< "scale=2; $*"
}

dtsdir()
{ 
  if [ -z "$1" ]  ; then
    echo "supply DTS"
    return 1
  fi
  if [ ! -d /home/lnara002/ws/dts/$1 ] ; then
    mkdir /home/lnara002/ws/dts/$1
  fi
  cd /home/lnara002/ws/dts/$1
}

