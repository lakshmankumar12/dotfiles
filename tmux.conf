set -g prefix `
bind-key a send-prefix
bind r source-file ~/.tmux.conf

#set keybinds as vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

#aux.0 is always where notifications are present.
unbind-key P
bind-key P run "bash -ci gotoMusicPane"

unbind-key C
bind-key C run "bash -ci gotoCurrentCode"
unbind-key E
bind-key E run "bash -ci gotoCurrentExecution"
unbind-key T
bind-key T run "bash -ci gotoCurrentExecutionSecond"
unbind-key B
bind-key B run "bash -ci gotoGenxNotes"
unbind-key N
bind-key N run "bash -ci gotoNotes"
unbind-key L
bind-key L run "bash -ci gotoLaunchPad"

unbind-key X
bind-key X run "bash -ci gotoIL3X"
unbind-key R
bind-key R run "bash -ci gotoJiraList"

unbind-key G
bind-key G run "bash -ci gotoWindowGivenbyG"
unbind-key W
bind-key W run "bash -ci gotoWindowGivenbyW"

unbind-key U
bind-key U run "bash -ci tmuxcliptohost"

unbind-key Z
bind-key Z command-prompt -I "bufname" "run-shell '/home/lakshman_narayanan/bin/save_in_tmux_buffer.sh %%'"

#set keybinds to vi in copy mode
set-window-option -g mode-keys vi

# start and end selection
bind-key -Tcopy-mode-vi 'v'      send -X begin-selection
bind-key -Tcopy-mode-vi 'y'      send -X copy-selection-and-cancel
bind-key -Tcopy-mode-vi 'Y'      send -X copy-selection \; command-prompt -I "bufname" "run-shell '/home/lakshman_narayanan/bin/save_in_tmux_buffer.sh %%'" \; send -X cancel
bind-key -Tcopy-mode-vi 'C-v'    send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'Escape' send -X clear-selection
bind-key -Tcopy-mode-vi 'q'      send -X cancel
bind-key -Tcopy-mode-vi 'a'      send -X cancel
## this is frustrating mis-type. So silence it.
unbind-key -Tcopy-mode-vi 'g'
bind-key -Tcopy-mode-vi 'a'      send -X history-top

#history
set-option -g history-limit 40000

#last windows
bind-key ` last-window

#rename window
bind-key A command-prompt 'rename-window %%'

#save to clipboard
bind-key > save-buffer ~/.tmux-buffer \; run-shell "source ~/.bashrc.local ; cat ~/.tmux-buffer | to_mac_clip > /dev/null"

#logging
bind-key I pipe-pane "exec cat >>$HOME/tmuxlogs-dev/'#I-#P-#W.log'" \; display-message 'Started logging to $HOME/tmuxlogs-dev/#P-#I-#W.log'
bind-key i pipe-pane \; display-message 'Ended logging to #I-#P-#W.log'

unbind-key V
bind-key V select-layout even-horizontal
unbind-key H
bind-key H select-layout even-vertical

#word-separators
set-window-option -g word-separators ' @"=:;,.()[]{}'
set-window-option -ag word-separators "'"

set-option -g pane-active-border-style "bg=colour0,fg=colour12"

set-option -g default-shell $HOME/bin/zsh
set-option -g default-terminal "xterm-256color"

#connecting multiple clients sholdn't force all clients to the least size!
setw -g aggressive-resize on

unbind-key !
bind-key ! break-pane -d
unbind-key J
bind-key J command-prompt 'join-pane -s %%'
unbind-key S
bind-key S command-prompt 'swap-window -d -t %%'
unbind-key M
bind-key M command-prompt 'move-window -t %%'
unbind-key e
bind-key e switch-client -l

#rescue a garbled pane
unbind-key O
bind-key O send-keys "!~/bin/sane.sh" C-m

##for nvim
set-option -sg escape-time 10

set-option -g display-time 4000

unbind-key Y
bind-key y run "bash -ci savecurrentpane" \; run "tmux split-window -l 30 'bash -ci cmdshnew'"

unbind-key y
bind-key y run "bash -ci savecurrentpane" \; run "tmux split-window -l 30 'bash -ci cmdshnew'"

unbind-key t
bind-key t command-prompt -p 'set pane-title(#T):' "run \"tmux select-pane -T %1\""
unbind-key w
bind-key w choose-tree -N -Z -w
unbind-key s
bind-key s run "bash -ci savecurrentpane" \; run "tmux new-window -n window-switcher 'bash -ci fzfchoosepane'"
unbind-key d
bind-key d run "bash -ci savecurrentpane" \; run "tmux new-window -n window-switcher 'bash -ci fzfchoosepane'"
unbind-key f
bind-key f run "bash -ci savecurrentpane" \; run "tmux new-window -n window-switcher 'bash -ci fzfchoosepane'"

unbind-key F
bind-key F detach

unbind-key K
bind-key K confirm kill-pane

unbind-key Q
bind-key Q run "bash -ci savecurrentpane" \; display-message -F "Current pane id is: #{pane_id}" \; load-buffer /tmp/tmuxbuffer/pane_id


unbind-key o
bind-key o run "bash -ci ~/bin/mac_open"

unbind-key u
bind-key u run "bash -ci tmuxsendhereanddate"

unbind-key v
bind-key v split-window -h \; send-keys "cdtmuxclip" "C-m"

unbind-key |
bind-key | split-window -h

bind-key -n C-S-Up resize-pane -U 3
bind-key -n C-S-Down resize-pane -D 3
bind-key -n C-S-Left resize-pane -L 3
bind-key -n C-S-Right resize-pane -R 3

# active window title colors
set-window-option -g window-status-current-style 'fg=default,bg=colour14,bright'

set-option -g status on
set-option -g status-interval 2
#TO SET status bar differently for second/2nd session
#set-option -g status-bg colour45
#set-option -g status-bg colour94
#set-option -g status-bg colour142
#set-option -g status-bg colour133

run " if [ -f ~/bin/set_tmux_color.sh ] ; then ~/bin/set_tmux_color.sh ; fi"

set-option -g status-fg colour8
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/software/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/software/tmux-powerline/powerline.sh right)"
#bind C-[ run '~/software/tmux-powerline/mute_powerline.sh left'
#bind C-] run '~/software/tmux-powerline/mute_powerline.sh right'

set-option -g allow-rename off
