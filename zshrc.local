function exists { which $1 &> /dev/null }

#override prompt
WANTED_PROMPT='${ret_status}%{$fg_bold[green]%}%p %{$fg[cyan]%}%~ %{$fg_bold[blue]%}$(git_super_status)%{$fg_bold[blue]%}$ %{$reset_color%}'
ALTERNATE_PROMPT='%{$fg_bold[green]%}%p%{$fg[cyan]%}%~ %{$fg_bold[blue]%}%{$fg_bold[blue]%}$ %{$reset_color%}'
PROMPT=$WANTED_PROMPT

promptalt () {
   PROMPT=$ALTERNATE_PROMPT
}

promptreset () {
   PROMPT=$WANTED_PROMPT
}

if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$($tac ~/.zsh_history | sed 's/^: [0-9]*:[0-9]*;//' | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history
fi

setopt extendedglob
emulate bash -c 'source ~/bashrc_for_zsh'
export DISABLE_AUTO_TITLE=true

__git_files () {
      _wanted files expl 'local files' _files
}

#autojump
[[ -s /home/lnara002/.autojump/etc/profile.d/autojump.sh ]] && source /home/lnara002/.autojump/etc/profile.d/autojump.sh
autoload -U compinit && compinit -u

split_to_arr()
{
  $2=($(echo $1 | tr '\n' ' '))
}

bindkey '^p' up-line-or-local-history
bindkey '^n' down-line-or-local-history

up-line-or-local-history() {
    zle set-local-history 1
    zle up-line-or-history
    zle set-local-history 0
}
zle -N up-line-or-local-history
down-line-or-local-history() {
    zle set-local-history 1
    zle down-line-or-history
    zle set-local-history 0
}
zle -N down-line-or-local-history

#ctrl-u like in bash/readline
bindkey \^U backward-kill-line

source ~/github/zsh-git-prompt/zshrc.sh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
