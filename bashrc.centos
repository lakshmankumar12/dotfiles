export PIDGINOLD='/drive_c/Users/lnara002/AppData/Roaming/.purple/logs/sipe/lakshman_kumar.narayanan@alcatel-lucent.com%2clakshman_kumar.narayanan@alcatel-lucent.com'
export PIDGIN='/drive_c/Users/lnara002/AppData/Roaming/.purple/logs/sipe/lakshman_kumar.narayanan@on.nokia.com%2clakshman_kumar.narayanan@on.nokia.com'

alias pidginold="cd $PIDGINOLD"
alias pidgin="cd $PIDGIN"
# tmux is ~/bin/tmux by path, we just need the env var.
alias tmux='TERM=xterm-256color tmux'
alias altgit='/home/lnara002/software/git/git/postinstall/bin/git'
debug_dirs=(lte_gtp lte_mscp lte_pmip lte_mip lte_cpm lte_mgmt lte_common)
alias mkvm='mk i386 64'

export GITLOCALCACHE='/home/lnara002/.gitcache/panos.git'

i386 () { cd bin/7xxx-i386/
          cp iom.tim i386-iom.tim
          cp cpm.tim i386-cpm.tim
          cp boot.tim i386-boot.tim
          cp both.tim i386-both.tim
          cp isa-aa.tim i386-isa-aa.tim
          scp i3*.tim $1@$1.mv.usa.alcatel.com:/home/$1/images
          cd ../.. ;}
i386n () { cd bin/7xxx-i386/
          cp iom.tim i386-iom.tim
          cp cpm.tim i386-cpm.tim
          cp boot.tim i386-boot.tim
          cp both.tim i386-both.tim
          cp isa-aa.tim i386-isa-aa.tim
          scp i3*.tim $1@$1.us.alcatel-lucent.com:/home/$1/images
          cd ../.. ;}		  
i386np () { cd bin/7xxx-i386/
          cp iom.tim i386-iom.tim
          cp cpm.tim i386-cpm.tim
          cp boot.tim i386-boot.tim
          cp both.tim i386-both.tim
          cp isa-aa.tim i386-isa-aa.tim
          scp i3*.tim $1@$1.ih.lucent.com:/home/$1/images
          cd ../.. ;}		  
hops () { cd bin/7xxx-hops/
          scp *.tim $1@$1.mv.usa.alcatel.com:/home/$1/images
          cd ../7xxx-chile/
          scp isa-aa.tim $1@$1.mv.usa.alcatel.com:/home/$1/images
          cd ../.. ;}
hopsn () { cd bin/7xxx-hops/
          scp *.tim $1@$1.us.alcatel-lucent.com:/home/$1/images
          cd ../7xxx-chile/
          scp isa-aa.tim $1@$1.us.alcatel-lucent.com:/home/$1/images
          cd ../.. ;}


hopsnp () { cd bin/7xxx-hops/
          scp *.tim $1@$1.ih.lucent.com:/home/$1/images
          cd ../7xxx-chile/
          scp isa-aa.tim $1@$1.ih.lucent.com:/home/$1/images
          cd ../.. ;}

queen () { 
  if [ -z "$1" ] ; then
    dest="images/current_testing"
  else
    dest="images/$1"
  fi
  cd bin/7xxx-i386/
  cp iom.tim i386-iom.tim
  cp cpm.tim i386-cpm.tim
  cp boot.tim i386-boot.tim
  cp both.tim i386-both.tim
  cp isa-aa.tim i386-isa-aa.tim
  echo "copying to $dest"
  scp i3*.tim lnara002@queen2.mv.usa.alcatel.com:/home/lnara002/$dest
  cd ../test
  scp codeversion.mk  setup_cli.cfg  teardown_cli.cfg  timos_features.mk lnara002@queen2.mv.usa.alcatel.com:/home/lnara002/$dest
  cd ../.. ;
}

queenhops () { cd bin/7xxx-hops/
          scp *.tim lnara002@queen2.mv.usa.alcatel.com:/home/lnara002/images/$1
          cd ../7xxx-chile/
          scp isa-aa.tim lnara002@queen2.mv.usa.alcatel.com:/home/lnara002/images/$1
          cd ../.. ;}		   

vi()
{
  /home/lnara002/bin/vim $*
}
vimdiff()
{
  /home/lnara002/bin/vimdiff $*
}
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
export EDITOR=/home/lnara002/bin/vim

vicode()
{
  sed -i 's/"Plugin '"'"'Valloric\/YouCompleteMe/Plugin '"'"'Valloric\/YouCompleteMe/' ~/.vimrc
  ( sleep 10 ; sed -i 's/Plugin '"'"'Valloric\/YouCompleteMe/"Plugin '"'"'Valloric\/YouCompleteMe/' ~/.vimrc ) &
  LD_LIBRARY_PATH=/usr/local/lib /home/lnara002/software/vim/vim74/postinstall/bin/vim $*
}

setr()
{
  /home/lnara002/work/gitlab/new-clone/shiftclone.py
  if [ $? -eq 0 ] ; then 
    export CURRENT_PANOS=$(cat /home/lnara002/.currp)
    echo "CURRENT_PANOS set to $CURRENT_PANOS"
    cd $CURRENT_PANOS/panos
  fi
}

setw()
{
  /home/lnara002/work/gitlab/new-clone/shiftclone.py -w
  if [ $? -eq 0 ] ; then 
    export CURRENT_PANOS=$(cat /home/lnara002/.currp)
    echo "CURRENT_PANOS set to $CURRENT_PANOS"
    cd $CURRENT_PANOS/panos
  fi
  export PATH=/home/lnara002/software/git/git/postinstall/bin:$PATH
}

cmdsh2ndpart()
{
  FILE=/tmp/tmuxbuffer/resultcmdsh
  DIR_PREFIX=$(dirname $FILE)
  if [ -f $FILE ] ; then
    :
  else
    /usr/bin/inotifywait $DIR_PREFIX -e create -e moved_to | while read path action file; do : ; done
  fi
  if [ -s $FILE ] ; then
    :
  else
    echo " " > $FILE
  fi
  perl -pi -e 's/^;#.*?;#\s*//;s/\s*;#.*$//;chomp if eof' $FILE
}

cmdsh()
{
  FILE=/tmp/tmuxbuffer/resultcmdsh
  DIR_PREFIX=$(dirname $FILE)
  rm -f /tmp/tmuxbuffer/resultcmdsh
  cat /home/lnara002/work/bitbucket/alu-common-stuff-notes/grepper_commands | /home/lnara002/bin/fzf-tmux -d 20% --exact --reverse --no-sort -m > $FILE
}

listvm()
{
  list_testbeds.py - | grep mvltevm | grep -v red | sort | grep IDLE
}

listtb()
{
  list_testbeds.py - | grep mvltetb | sort | grep IDLE
}

listhw()
{
  list_testbeds.py - | grep MtnView | grep -i hardware | grep -i lte | sort -k 3,3 -k 2,2 | awk -vRESET='\033[0;0m' -vRED='\033[31m' -vBLUE='\033[34m' -vGREEN='\033[32m'  ' /INPROG/ {printf "%s",BLUE } /PAUSED/ {printf "%s",RED}  /IDLE/ {printf "%s",GREEN}   1 { print } END { printf "%s",RESET} '
}

mgtags_old()
{
  git tag | grep TiMOS-MG |  sed 's/-\([[:digit:]]\+\)/ - \1/' | \
    sed -n 's/\(TiMOS-MG_[[:digit:]]\+_0_[[:alpha:]]\)\([[:digit:]]\+\)/\1 \2/p' | \
    sort -n -k 2 -k 4 -r | tr -d ' '
}

mgtags()
{
  if [ -z "$1" ] ; then
    pattern="^TiMOS-MG_0_0_I"
    filter="_I"
  elif [ $1 == "80S" ] ; then
    pattern="^TiMOS-MG_8_0_S"
    filter="_S"
  elif [ $1 == "80B" ] ; then
    pattern="^TiMOS-MG_8_0_B1"
    filter="_B1"
  elif [ $1 == "cust" ] ; then
    pattern="^$2"
    filter="$3"
  else
    echo "Unrecogized input"
    echo "$0 [80S|80B|cust <pattern> <filter>]"
    echo " (no-arg uses 00)"
    return
  fi
  git tag | grep $pattern | sed "s/$filter/$filter /"  | sort -k 2 -n  | sed 's/ //' | less
}

check_sanity()
{
  if [ -z "$CURRENT_PANOS" ]; then
    echo "CURRENT_PANOS is not set. Do setr first"
    return 1
  fi
  if [[ ! $(pwd) == *"$CURRENT_PANOS"* ]] ; then
    echo "CURRENT_PANOS:$CURRENT_PANOS doesn't seem to be in pwd:$(pwd)"
    return 1
  fi
  return 0
}

cdr()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS
}

cdp()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos
}

cdpbinx()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-i386
}

cdpbinx64()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-x86_64
}

cdpchile()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/bin/7xxx-chile
}

cdplg()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/lte_gtp
}

cdpg()
{
  check_sanity; if [ $? -ne 0 ] ; then return 1 ; fi
  cd $CURRENT_PANOS/panos/gen
}

testbd()
{
  if [ -z "$testbed" -a -z "$1" ] ; then
    echo "no testbed is set"
  fi
  if [ -n "$1" ] ; then
    echo "seting testbed to $1"
    export testbed=$1
  else
    echo "using testbed $testbed"
  fi
  ssh -X $testbed@$testbed
}

dtsdir()
{
  if [ -z "$1" ]  ; then
    echo "supply DTS"
    return 1
  fi
  if [ ! -d /home/lnara002/ws/dts/$1 ] ; then
    mkdir /home/lnara002/ws/dts/$1
  fi
  cd /home/lnara002/ws/dts/$1
}

mkf()
{
  ps -ef | grep '\<mk\>' | grep -v egrep | sort -u -k6,6
}

mkp()
{
  if [ -n "$1" ] ; then
    echo $1 > ~/.current_mk_progress_pid
  fi
  pid=$(cat ~/.current_mk_progress_pid)
  kill -s 0 $pid 2> /dev/null
  if [ $? -ne 0 ] ; then
    echo "pid $pid isn't available"
    return 1
  fi
  echo "pid is $pid"
  ls -l /proc/$pid/cwd
  pstree -p $pid
  howlong $pid
  pand=$(\ls -l /proc/$pid/cwd | awk '{print $11}')
  tput setaf 4
  echo "comments:"
  tput sgr0
  cat $pand/../comments
  tput setaf 4
  echo "log.txt progress:"
  tput sgr0
  wc $pand/log.txt
  tput setaf 4
  echo "db machine:"
  tput sgr0
  cat $pand/db2_user_cfg
  tput setaf 4
  echo "prefs file:"
  tput sgr0
  find $pand -name prefs.mk | parallel --no-notice 'echo {}; cat {}'
}

pgprog()
{
  file=$(ps -ef | grep panosgrep | grep tmp | awk '{print $13}' | cut -c2-)
  if [ -z "$file" ] ; then echo "looks like no panosgrep is in progress" ; return ; fi
  less $file
}

